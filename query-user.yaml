---
- name: Query a user in ISV
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Get access token
      uri:
        url: "{{ tenant_url }}/v1.0/endpoint/default/token"
        method: POST
        body_format: form-urlencoded
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          grant_type: client_credentials
      register: results
    - set_fact:
        access_token: "{{ results.json.access_token }}"
    - debug:
        var: access_token

    - name: Call ISV SCIM API for list webhooks
      uri:
        #url: "{{ tenant_url }}/v2.0/Users?filter=username%20eq%20{{ username }}"
        url: "{{ tenant_url }}/config/v1.0/webhooks/"
        method: GET
        #return_content: yes
        headers:
          Accept: application/scim+json
          Authorization: "Bearer {{ access_token }}"
        #    body:
        #      filter: "userName eq {{ username }}"
      register: results
    - set_fact:
        #isv_users: "{{ results.json.Resources }}"
        webhooks: "{{ results }}"
    - debug:
        var: webhooks

    - name: Call ISV SCIM API to query user
      uri:
        url: "{{ tenant_url }}/v2.0/Users?filter=username%20eq%20{{ username }}/"
        method: GET
        headers:
          Accept: application/scim+json
          Authorization: "Bearer {{ access_token }}"
        #    body:
        #      filter: "userName eq {{ username }}"
      register: results
    - set_fact:
        isv_user: "{{ results }}"
    - debug:
        var: isv_user

    - name: Call ISV SCIM API to get all users
      uri:
        url: "{{ tenant_url }}/v2.0/Users?filter=username%20eq%20%22test%22"
        method: GET
        headers:
          Accept: application/scim+json
          Authorization: "Bearer {{ access_token }}"
      register: results
    - set_fact:
        api_clients: "{{ results }}"
    - debug:
        var: api_clients